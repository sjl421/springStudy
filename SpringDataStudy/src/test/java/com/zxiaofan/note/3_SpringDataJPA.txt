3_SpringDataJPA
3.1 环境配置
<!-- 1 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="username" value="zxiaofan"/>
        <property name="password" value="zxiaofan.com"/>
        <property name="url" value="jdbc:mysql:///studydb"/>
    </bean>
    <!-- 2 配置EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="com.zxiaofan"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop> <!--格式化打印的sql代码-->
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 没有表则自动生成-->
            </props>
        </property>
    </bean>
    <!-- 3 配置事物管理器-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <!-- 4 配置支持注解的事物-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 5 配置Spring data-->
    <jpa:repositories base-package="com.zxiaofan" entity-manager-factory-ref="entityManagerFactory"/>
    <context:component-scan base-package="com.zxiaofan"/>

 3.2 使用
 public interface EmployeeRepository extends Repository<Employee,Integer> {
     public Employee findByName(String name);
 }

3.3 标记接口（没有包含方法声明的接口）
public interface Repository<T, ID extends Serializable> {
}
Java中常用的三个标记接口分别是:RandomAccess、Cloneable、Serializable。
作用就是当某个类实现这个接口的时候,我们就认为这个类拥有了接口标记的某种功能。

如果接口没有继承Repository，报错
org.springframework.beans.factory.NoSuchBeanDefinitionException:
No qualifying bean of type 'com.zxiaofan.repository.EmployeeRepository' available

不继承Repository，可以使用注解实现相同的功能。
@RepositoryDefinition(domainClass = Employee.class, idClass = Integer.class)
